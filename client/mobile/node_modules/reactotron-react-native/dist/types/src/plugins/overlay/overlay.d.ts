import React, { Component } from "react";
import { ImageResizeMode, FlexAlignType, AnimatableNumericValue } from "react-native";
interface Props {
    emitter: any;
}
interface State {
    opacity: AnimatableNumericValue;
    uri: string;
    justifyContent: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly";
    alignItems: FlexAlignType;
    width?: number;
    height?: number;
    growToWindow?: boolean;
    resizeMode?: ImageResizeMode;
    marginLeft?: number;
    marginRight?: number;
    marginTop?: number;
    marginBottom?: number;
    showDebug?: boolean;
}
/** An overlay for showing an image to help with layout.
 *
 * @class FullScreenOverlay
 * @extends {Component}
 */
declare class FullScreenOverlay extends Component<Props, State> {
    constructor(props: Props);
    createContainerStyle(): {
        opacity: AnimatableNumericValue;
        width: number;
        height: number;
        justifyContent: "center" | "flex-start" | "flex-end" | "space-between" | "space-around" | "space-evenly";
        alignItems: FlexAlignType;
        backfaceVisibility?: "visible" | "hidden";
        backgroundColor?: import("react-native").ColorValue;
        borderBlockColor?: import("react-native").ColorValue;
        borderBlockEndColor?: import("react-native").ColorValue;
        borderBlockStartColor?: import("react-native").ColorValue;
        borderBottomColor?: import("react-native").ColorValue;
        borderBottomEndRadius?: AnimatableNumericValue;
        borderBottomLeftRadius?: AnimatableNumericValue;
        borderBottomRightRadius?: AnimatableNumericValue;
        borderBottomStartRadius?: AnimatableNumericValue;
        borderColor?: import("react-native").ColorValue;
        borderCurve?: "circular" | "continuous";
        borderEndColor?: import("react-native").ColorValue;
        borderEndEndRadius?: AnimatableNumericValue;
        borderEndStartRadius?: AnimatableNumericValue;
        borderLeftColor?: import("react-native").ColorValue;
        borderRadius?: AnimatableNumericValue;
        borderRightColor?: import("react-native").ColorValue;
        borderStartColor?: import("react-native").ColorValue;
        borderStartEndRadius?: AnimatableNumericValue;
        borderStartStartRadius?: AnimatableNumericValue;
        borderStyle?: "solid" | "dotted" | "dashed";
        borderTopColor?: import("react-native").ColorValue;
        borderTopEndRadius?: AnimatableNumericValue;
        borderTopLeftRadius?: AnimatableNumericValue;
        borderTopRightRadius?: AnimatableNumericValue;
        borderTopStartRadius?: AnimatableNumericValue;
        elevation?: number;
        pointerEvents?: "auto" | "box-none" | "none" | "box-only";
        alignContent?: "center" | "flex-start" | "flex-end" | "space-between" | "space-around" | "stretch";
        alignSelf?: "auto" | FlexAlignType;
        aspectRatio?: string | number;
        borderBottomWidth?: number;
        borderEndWidth?: number;
        borderLeftWidth?: number;
        borderRightWidth?: number;
        borderStartWidth?: number;
        borderTopWidth?: number;
        borderWidth?: number;
        bottom?: import("react-native").DimensionValue;
        display?: "none" | "flex";
        end?: import("react-native").DimensionValue;
        flex?: number;
        flexBasis?: import("react-native").DimensionValue;
        flexDirection?: "row" | "column" | "row-reverse" | "column-reverse";
        rowGap?: number;
        gap?: number;
        columnGap?: number;
        flexGrow?: number;
        flexShrink?: number;
        flexWrap?: "wrap" | "nowrap" | "wrap-reverse";
        left?: import("react-native").DimensionValue;
        margin?: import("react-native").DimensionValue;
        marginBottom?: import("react-native").DimensionValue;
        marginEnd?: import("react-native").DimensionValue;
        marginHorizontal?: import("react-native").DimensionValue;
        marginLeft?: import("react-native").DimensionValue;
        marginRight?: import("react-native").DimensionValue;
        marginStart?: import("react-native").DimensionValue;
        marginTop?: import("react-native").DimensionValue;
        marginVertical?: import("react-native").DimensionValue;
        maxHeight?: import("react-native").DimensionValue;
        maxWidth?: import("react-native").DimensionValue;
        minHeight?: import("react-native").DimensionValue;
        minWidth?: import("react-native").DimensionValue;
        overflow?: "visible" | "hidden" | "scroll";
        padding?: import("react-native").DimensionValue;
        paddingBottom?: import("react-native").DimensionValue;
        paddingEnd?: import("react-native").DimensionValue;
        paddingHorizontal?: import("react-native").DimensionValue;
        paddingLeft?: import("react-native").DimensionValue;
        paddingRight?: import("react-native").DimensionValue;
        paddingStart?: import("react-native").DimensionValue;
        paddingTop?: import("react-native").DimensionValue;
        paddingVertical?: import("react-native").DimensionValue;
        position?: "absolute" | "relative";
        right?: import("react-native").DimensionValue;
        start?: import("react-native").DimensionValue;
        top?: import("react-native").DimensionValue;
        zIndex?: number;
        direction?: "inherit" | "ltr" | "rtl";
        shadowColor?: import("react-native").ColorValue;
        shadowOffset?: Readonly<{
            width: number;
            height: number;
        }>;
        shadowOpacity?: AnimatableNumericValue;
        shadowRadius?: number;
        transform?: (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[];
        transformMatrix?: number[];
        rotation?: AnimatableNumericValue;
        scaleX?: AnimatableNumericValue;
        scaleY?: AnimatableNumericValue;
        translateX?: AnimatableNumericValue;
        translateY?: AnimatableNumericValue;
    };
    renderDebug(): React.JSX.Element;
    /**
     * Draw.
     */
    render(): React.JSX.Element;
}
export default FullScreenOverlay;
